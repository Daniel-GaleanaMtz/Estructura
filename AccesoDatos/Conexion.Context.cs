//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DGaleanaEstructuraEntities : DbContext
    {
        public DGaleanaEstructuraEntities()
            : base("name=DGaleanaEstructuraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Departamento> Departamentoes { get; set; }
        public virtual DbSet<Empleado> Empleadoes { get; set; }
        public virtual DbSet<Puesto> Puestoes { get; set; }
        public virtual DbSet<Tabla> Tablas { get; set; }
    
        public virtual int AddEmpleado(string nombre, Nullable<int> idPuesto, Nullable<int> idDepartamento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpleado", nombreParameter, idPuestoParameter, idDepartamentoParameter);
        }
    
        public virtual int DeleteEmpleado(Nullable<int> idEmpleado)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmpleado", idEmpleadoParameter);
        }
    
        public virtual ObjectResult<GetAllDepartamento_Result> GetAllDepartamento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDepartamento_Result>("GetAllDepartamento");
        }
    
        public virtual ObjectResult<GetAllPuesto_Result> GetAllPuesto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPuesto_Result>("GetAllPuesto");
        }
    
        public virtual ObjectResult<GetEmpleadoPuestoDepartamento_Result> GetEmpleadoPuestoDepartamento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpleadoPuestoDepartamento_Result>("GetEmpleadoPuestoDepartamento");
        }
    
        public virtual ObjectResult<GetByNameEmpleado_Result> GetByNameEmpleado(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByNameEmpleado_Result>("GetByNameEmpleado", nombreParameter);
        }
    }
}
